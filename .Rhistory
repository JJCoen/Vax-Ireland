12585 * 0.15
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost is
€5 per kg
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
11310 * 5
cost_purchased <- purchase_materials * cost_per_kg
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
units_to_produce <- reqd_prod
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_materials[1:3] <- total_materials[2:4] * 0.15
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost is
€5 per kg
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased) %>%
kbl() %>%
kable_styling()
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased,
annual_cost) %>%
kbl() %>%
kable_styling()
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending inventory = 25% of next quarter sales
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending inventory = 25% of next quarter sales
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 10% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.1
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 10% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.1
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.1
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
exp_unit_sales <- c(Q1 = 20000, Q2 = 25000, Q3 = 30000, Q4 = 25000)
# ending raw materials inventory each quarter of 20% of the next quarter's production needs.
end_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
end_inv[1:3] <- exp_unit_sales[2:4] * 0.2
# Assume next year sales for Q1 is 5000 units
end_inv[4] <- 5000 * 0.2
# total required units
total_reqd <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
total_reqd <- exp_unit_sales + end_inv
# beninning inventory
# have 875 units from last quarter of previous year
begin_inv <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_inv[1] <- 875
# begin_inv = previous quarter ending inv
begin_inv[2:4] <- end_inv[1:3]
# Required Producion (number of units)
reqd_prod <- total_reqd - begin_inv
# Total Annual Production
annual_prod <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_prod[1] <- sum(reqd_prod)
rbind(exp_unit_sales,
end_inv,
total_reqd,
begin_inv,
reqd_prod,
annual_prod) %>%
kbl() %>%
kable_styling()
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost of $5 per kilogram of materials
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
total_materials_reqd
units_to_produce <- reqd_prod
# Each unit requires 3 kilograms of materials
materials_per_unit <- structure(rep(x = 3, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
total_materials <- units_to_produce * materials_per_unit
end_materials <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
# ending raw materials inventory each quarter of 10% of the next quarter's production needs
end_materials[1:3] <- total_materials[2:4] * 0.1
# need 15% of materials in Q1 of next year
end_materials[4] <- 2100
total_materials_reqd <- total_materials + end_materials
begin_materials <-  structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
begin_materials[1] <- 1631
begin_materials[2:4] <- end_materials[1:3]
purchase_materials <- total_materials_reqd - begin_materials
# Cost of $5 per kilogram of materials
cost_per_kg <- structure(rep(x = 5, times = 4),
names=c("Q1", "Q2", "Q3", "Q4") )
cost_purchased <- purchase_materials * cost_per_kg
# Total Annual Cost
annual_cost <- structure(numeric(4), names=c("Q1", "Q2", "Q3", "Q4") )
annual_cost[1] <- sum(cost_purchased)
rbind(units_to_produce,
materials_per_unit,
total_materials,
end_materials,
total_materials_reqd,
begin_materials,
purchase_materials,
cost_per_kg,
cost_purchased,
annual_cost) %>%
kbl() %>%
kable_styling()
updateR()
q()
R.version
install.packages("Rtools")
install.packages("workflowr")
install.packages(c("dplyr", "rlang", "stringi"))
library(workflowr)
wflow_git_config(user.name = "JJCoen")
wflow_start(directory = "Scotland-Vaxxed")
knitr::opts_chunk$set(echo = TRUE)
# Load the package required to read JSON files.
library("rjson")
install.packages("rjson")
# Load the package required to read JSON files.
library("rjson")
#| include: false
library(plotly)
library(data.table)
library(janitor)
fig <- plot_ly(x = c(1, 2, 3), y = c(1, 3, 2), type = 'bar')%>%
layout(title = 'A Plotly Figure',
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
data(iris)
fig <- plot_ly(data = iris, x = ~Sepal.Width, y = ~Sepal.Length,
color = ~Species,
type = "scatter", mode = "markers")%>%
layout(title="A Plotly Figure",
legend=list(title=list(text='species')),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
# line plot
fig1 <- plot_ly(y = c(4, 2, 1), type = "scatter", mode = "lines") %>%
layout(plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
# bar plot
fig2 <- plot_ly(y = c(2, 1, 3), type = "bar") %>%
layout(plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig <- subplot(fig1, fig2)
fig
fig <- plot_ly()%>%
add_trace(x = c(1, 2, 3), y = c(1, 3, 2), type = 'bar') %>%
layout(plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
data(iris)
fig_iris <- plot_ly(data = iris, x = ~Sepal.Width, y = ~Sepal.Length,
color = ~Species,
type = "scatter", mode = "markers")%>%
layout(title="A Plotly Figure",
legend=list(title=list(text='species')),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig_iris
fig_iris |>
add_trace(x = c(2, 4), y = c(4, 8), type = "scatter",
mode = "lines", line = list(color = 'grey'),
showlegend = FALSE)
library(plotly)
data(iris)
fig <- plot_ly()%>%
add_trace(data = iris, x = ~Sepal.Width, y = ~Sepal.Length, color = ~Species,
type = "scatter", mode = "markers")%>%
layout(title="Using The add_trace() method With A Plotly Figure",  legend=list(title=list(text='species')),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))%>%
add_trace(x = c(2, 4), y = c(4, 8), type = "scatter", mode = "lines", line = list(color = 'grey')
, showlegend = FALSE)
fig
fig <- plot_ly(x = c(1, 2, 3), y = c(1, 3, 2), type = 'bar')%>%
layout(title = list(text ='Using layout() With Plotly Figures',
font = list(size = 17)),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
fig <- plot_ly(x = c(1, 2, 3), y = c(1, 3, 2), type = 'bar')%>%
layout(title = list(text ='Using layout() With Plotly Figures',
font = list(size = 27)),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
fig <- plot_ly(x = c(1, 2, 3), y = c(1, 3, 2), type = 'bar')%>%
layout(title = list(text ='Using layout() With Plotly Figures',
font = list(size = 20)),
plot_bgcolor='#e5ecf6',
xaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(
zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'))
fig
fig_iris2 <- fig_iris %>%
layout(title = "Updating x axis in a Plotly Figure",
legend=list(title=list(text='species')),
xaxis = list(showgrid = F) )
fig_iris2
getwd()
setwd("~/MEGA/MEGAsync/Data_Scientist/Public-Sector/Vaccinations/Vax-Ireland")
